
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author yogayogi
 */
public final class TransactionForm extends javax.swing.JFrame {
    
//    public class Product{
//            private String productName;
//            private double productPrice;
//            private int productQty;
//            private double productSub;
//
//            public Product(String pName,double pPrice,int pQty){
//                    productName=pName;
//                    productPrice=pPrice;
//                    productQty=pQty;
//                    productSub=0;
//
//            }
//            public String getProductName() {
//                return productName;
//            }
//
//            public void setProductName(String productName) {
//                this.productName = productName;
//            }
//
//            public double getProductPrice() {
//                return productPrice;
//            }
//
//            public void setProductPrice(double productPrice) {
//                this.productPrice = productPrice;
//            }
//
//            public int getProductQty() {
//                return productQty;
//            }
//
//            public void setProductQty(int productQty) {
//                this.productQty = productQty;
//            }
//
//            public double getProductSub() {
//                return productSub;
//            }
//
//            public void setProductSub(double productSub) {
//                this.productSub = productPrice*productQty;
//            }
//        }
//    Product []productList = new Product[6];
//    public void init(){
//
//           productList[0]=new Product("Singel Origin Coffee", 32000, 0);
//           productList[1]=new Product("Espresso", 24000, 0);
//           productList[2]=new Product("Capuccino", 39000, 0);
//           productList[3]=new Product("Mocca Frappuccino", 44000, 0);
//           productList[4]=new Product("French Fries", 20000, 0);
//           productList[5]=new Product("Arabian Burger", 29000, 0);
//           
//        
//    }
//      public void tambahRow(Object[][] productList){
//         int idx=OrderList.getSelectedIndex();
//            DefaultTableModel tblmdl=(DefaultTableModel) TransactionTable.getModel();
//            tblmdl.addRow(productList[idx]);
//    }

    /**
     * Creates new form TransactionForm
     */
//    String []ProductName = new String[6];
     
//    int []qty= new int[6];
//    int index = 0, total = 0, sub = 0;
//    
//    public void init(){
//        ProductName[0]="Singel Origin Coffee";
//        ProductName[1]="Espresso";
//        ProductName[2]="Capuccino";
//        ProductName[3]="Mocca Frappuccino";
//        ProductName[4]="French Fries";
//        ProductName[5]="Arabian Burger";
//        
//        qty[0]=0;
//        qty[1]=0;
//        qty[2]=0;
//        qty[3]=0;
//        qty[4]=0;
//        qty[5]=0;
//        
       
//    }
//     
    public int[] price = {32000,24000,39000,44000,20000,29000};
    int total=0;
    int qty=0;
    int subqty=0;
    int kondisi=0;
    public static int KondisiMeja=0;
    
    
//            price[0]=32000;
//            price[1]=24000;
//            price[2]=39000;
//            price[3]=44000;
//            price[4]=20000;
//            price[5]=29000;
    
    public TransactionForm() {
        initComponents();
        setTitle("Transaction Form");
        setSize(500, 300);
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        setLocationRelativeTo(this);
        setVisible(false);
      
    }
    public boolean checkQty(){
        DefaultTableModel tblmdl=(DefaultTableModel) TransactionTable.getModel();
        for(int i=0;i<tblmdl.getRowCount();i++){
            if(tblmdl.getValueAt(i, 0)== OrderList.getSelectedItem()){
                return true;
            }
           kondisi=i+1;
        }
        
        return false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NorthContainer = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TransactionTable = new javax.swing.JTable();
        ScrollbarTable = new javax.swing.JScrollBar();
        CenterContainer = new javax.swing.JPanel();
        lblOrder = new javax.swing.JLabel();
        lblSpace = new javax.swing.JLabel();
        OrderList = new javax.swing.JComboBox();
        SpinnerQty = new javax.swing.JSpinner();
        ButtonOrder = new javax.swing.JButton();
        SouthContainer = new javax.swing.JPanel();
        lblTotal = new javax.swing.JLabel();
        lblRP = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        buttonFinalize = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(400, 100));
        jScrollPane2.setVerticalScrollBar(ScrollbarTable);

        TransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order", "Price", "Quantity", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TransactionTable.setFillsViewportHeight(true);
        jScrollPane2.setViewportView(TransactionTable);

        NorthContainer.add(jScrollPane2);
        NorthContainer.add(ScrollbarTable);

        getContentPane().add(NorthContainer, java.awt.BorderLayout.NORTH);

        CenterContainer.setMaximumSize(new java.awt.Dimension(32767, 50));
        CenterContainer.setPreferredSize(new java.awt.Dimension(400, 50));

        lblOrder.setText("Order :");
        CenterContainer.add(lblOrder);

        lblSpace.setText("               ");
        CenterContainer.add(lblSpace);

        OrderList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Singel Origin Coffee", "Espresso", "Capuccino", "Mocca Frappuccino", "French Fries", "Arabian Burger" }));
        OrderList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderListActionPerformed(evt);
            }
        });
        CenterContainer.add(OrderList);

        SpinnerQty.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        CenterContainer.add(SpinnerQty);

        ButtonOrder.setText("Buy");
        ButtonOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOrderActionPerformed(evt);
            }
        });
        CenterContainer.add(ButtonOrder);

        getContentPane().add(CenterContainer, java.awt.BorderLayout.CENTER);

        lblTotal.setText("Total Price :");
        SouthContainer.add(lblTotal);

        lblRP.setText("Rp.");
        SouthContainer.add(lblRP);
        SouthContainer.add(lblTotalPrice);

        buttonFinalize.setText("Finalize Transaction");
        buttonFinalize.setEnabled(false);
        buttonFinalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFinalizeActionPerformed(evt);
            }
        });
        SouthContainer.add(buttonFinalize);

        getContentPane().add(SouthContainer, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OrderListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OrderListActionPerformed

    private void buttonFinalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFinalizeActionPerformed
        String multiLineMsg[] = { "Total Price : "+total , "Input Payment : "} ;
        String PayS = JOptionPane.showInputDialog(multiLineMsg);
        System.out.println(PayS);
        
        if(!("".equals(PayS))){
            if(!PayS.matches("[0-9]+")){
                JOptionPane.showMessageDialog(null,"Must be a Number");
            }else{
                int payInt = Integer.parseInt(PayS);
                if(payInt<total){
                    JOptionPane.showMessageDialog(null,"Please Enter a Valid payment");
                }else{
                    int change=payInt-total;
                    String multi[] = { "Thank You for Purchasing", "Change : "+change} ;
                    JOptionPane.showMessageDialog(null,multi);
                    KondisiMeja=0;
                    dispose();
                }
            }
        }else{
            JOptionPane.showMessageDialog(this,"Please Enter your Money");
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonFinalizeActionPerformed

    private void ButtonOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOrderActionPerformed
//       Product []productList1 = new Product[5];
        KondisiMeja=1;
        DefaultTableModel tblmdl=(DefaultTableModel) TransactionTable.getModel();
        if( Integer.parseInt(SpinnerQty.getValue().toString()) < 1 ){
            JOptionPane.showMessageDialog(null, "Quantity must bigger than 0");
        }else if(checkQty()){
            int idx=OrderList.getSelectedIndex();
            int subQty = (Integer) SpinnerQty.getValue();
            qty=(Integer.parseInt(tblmdl.getValueAt(idx, 2).toString()))+subQty;
            //qty+=subQty;
            int subT=price[idx]*qty;
            total+=subT;
            buttonFinalize.setEnabled(true);
            if(tblmdl.getValueAt(kondisi, 0)== OrderList.getSelectedItem()){
                tblmdl.setValueAt(qty, kondisi, 2);
                tblmdl.setValueAt(subT, kondisi, 3);
                System.out.println("sama");
            }else{
                tblmdl.setValueAt(qty, OrderList.getSelectedIndex(), 2);
                tblmdl.setValueAt(subT, OrderList.getSelectedIndex(), 3);
                System.out.println("beda");
            }
            lblTotalPrice.setText(String.valueOf(total));
            System.out.println("tambah");
        }else{
            int idx=OrderList.getSelectedIndex();
            int subQty = (Integer) SpinnerQty.getValue();
            qty+=subQty;
            //qty+=subQty;
            int subT=price[idx]*qty;
            total+=subT;
            buttonFinalize.setEnabled(true);
            tblmdl.addRow(new Object[]{OrderList.getSelectedItem(),price[idx],subQty,subT});
            //qty=1;
            lblTotalPrice.setText(String.valueOf(total));
            System.out.println("add");
        }
    }//GEN-LAST:event_ButtonOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TransactionForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonOrder;
    private javax.swing.JPanel CenterContainer;
    private javax.swing.JPanel NorthContainer;
    private javax.swing.JComboBox OrderList;
    private javax.swing.JScrollBar ScrollbarTable;
    private javax.swing.JPanel SouthContainer;
    private javax.swing.JSpinner SpinnerQty;
    private javax.swing.JTable TransactionTable;
    private javax.swing.JButton buttonFinalize;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblRP;
    private javax.swing.JLabel lblSpace;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalPrice;
    // End of variables declaration//GEN-END:variables
}
