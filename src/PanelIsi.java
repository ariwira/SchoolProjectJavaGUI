/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.awt.event.InputEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
/**
 *
 * @author ariwira
 */
public class PanelIsi extends javax.swing.JPanel implements MouseMotionListener, MouseListener {
    
    /**
     * Creates new form PanelIsi
     */
    public int x,y;
    int rotate=0,diRotate=0;
    PanelKiri left = new PanelKiri();
    
    @Override
    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        ImageIcon background = new ImageIcon(new ImageIcon("Assets/background.png").getImage().getScaledInstance(850, 500, Image.SCALE_DEFAULT));
        background.paintIcon(this, g, 0, 0);
        ImageIcon MejaKotak,MejaBulat;
        if(PanelKiri.tableTypeTrigger==1){
            if(rotate==0){
                MejaKotak = new ImageIcon(new ImageIcon("Assets/table1.jpg").getImage().getScaledInstance(190, 70, Image.SCALE_DEFAULT));
                Graphics2D g2d = (Graphics2D) g;
                MejaKotak.paintIcon(this, g2d, x, y);
                
            }else if(rotate==1){
                MejaKotak = new ImageIcon(new ImageIcon("Assets/table3.jpg").getImage().getScaledInstance(70, 190, Image.SCALE_DEFAULT));
                Graphics2D g2d = (Graphics2D) g;
                MejaKotak.paintIcon(this, g2d, x, y);
            }
        }else if(PanelKiri.tableTypeTrigger==2){
            MejaBulat = new ImageIcon(new ImageIcon("Assets/table2.png").getImage().getScaledInstance(80, 80, Image.SCALE_DEFAULT));
            MejaBulat.paintIcon(this, g, x, y);
        }
        for(int i=0;i<titik.size();i++){
            Point2D p2d = titik.elementAt(i);
            int type = tableType.elementAt(i);
            if(type==1){
                MejaKotak = new ImageIcon(new ImageIcon("Assets/table1.jpg").getImage().getScaledInstance(190, 70, Image.SCALE_DEFAULT));
                Graphics2D g2d = (Graphics2D) g;
                MejaKotak.paintIcon(this, g2d, ((Point)p2d).x, ((Point)p2d).y);
            }else if(type==2){
                
                MejaBulat = new ImageIcon(new ImageIcon("Assets/table2.png").getImage().getScaledInstance(80, 80, Image.SCALE_DEFAULT));
                MejaBulat.paintIcon(this, g, ((Point)p2d).x, ((Point)p2d).y);
            }else if(type==3){
                MejaKotak = new ImageIcon(new ImageIcon("Assets/table1.jpg").getImage().getScaledInstance(70, 190, Image.SCALE_DEFAULT));
                Graphics2D g2d = (Graphics2D) g;
                MejaKotak.paintIcon(this, g2d, ((Point)p2d).x, ((Point)p2d).y);
            }
        }
        
    }
    public PanelIsi() {
        initComponents();
        addMouseMotionListener(this);
        addMouseListener(this);
        setSize(850, 500);
        
    }
    public static Vector<Point2D> titik = new Vector<Point2D>();
    
    public static Vector<Integer> tableType = new Vector<Integer>();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseDragged(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        x=e.getX();
        y=e.getY();
        repaint();
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if(SwingUtilities.isLeftMouseButton(e)){
            Point p = new Point(e.getX(), e.getY());
            
            if(PanelKiri.triggerButton==2){
                titik.add(p);
                if(PanelKiri.tableTypeTrigger==1){
                    if(rotate==0){
                        tableType.add(1);
                    }else if(rotate==1){
                        tableType.add(3);
                    }
                }else if(PanelKiri.tableTypeTrigger==2){
                    tableType.add(2);
                }
                repaint();
            }
            PanelKiri.tableTypeTrigger=0;
            if(PanelKiri.triggerDelete==1){
                System.out.println("titik "+titik.size());
                
                    System.out.println("Delete Masuk");
                    for(int i=0;i<titik.size();i++){
                        System.out.println("Masuk loop");
                        int type = tableType.elementAt(i);
                        System.out.println(type);
                        if(type==1){
                            if(titik.elementAt(i).getX() < e.getX() && titik.elementAt(i).getX() + 190 > e.getX() && titik.elementAt(i).getY() < e.getY() && titik.elementAt(i).getY() + 70 > e.getY()){
                                titik.removeElementAt(i);
                                tableType.removeElementAt(i);
                                System.out.println("Berhasi");
                                break;
                            }
                        }else if(type==2){
                            if(titik.elementAt(i).getX() < e.getX() && titik.elementAt(i).getX() + 80 > e.getX() && titik.elementAt(i).getY() < e.getY() && titik.elementAt(i).getY() + 80 > e.getY()){
                                titik.removeElementAt(i);
                                tableType.removeElementAt(i);
                                System.out.println("Berhasi");
                                break;
                            }
                        }else if(type==3){
                            if(titik.elementAt(i).getX() < e.getX() && titik.elementAt(i).getX() + 70 > e.getX() && titik.elementAt(i).getY() < e.getY() && titik.elementAt(i).getY() + 190 > e.getY()){
                                titik.removeElementAt(i);
                                tableType.removeElementAt(i);
                                System.out.println("Berhasi");
                                break;
                            }
                        }
                    }
                    System.out.println("Keluar loop");
                
                
            }
            PanelKiri.triggerDelete = 0;
            
        }else if(SwingUtilities.isMiddleMouseButton(e)){
            if(rotate==0){
                rotate=1;
            }else{
                rotate=0;
            }
        }else if(SwingUtilities.isRightMouseButton(e)){
            PanelKiri.tableTypeTrigger=0;
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
}
